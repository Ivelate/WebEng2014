
package ivelate.p1.soapserver;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8-b131 
 * Generated source version: 2.1
 * 
 */
@WebService(name = "TodoWebService", targetNamespace = "http://soapserver.p1.ivelate/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TodoWebService {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "removeToDo", targetNamespace = "http://soapserver.p1.ivelate/", className = "ivelate.p1.soapserver.RemoveToDo")
    @ResponseWrapper(localName = "removeToDoResponse", targetNamespace = "http://soapserver.p1.ivelate/", className = "ivelate.p1.soapserver.RemoveToDoResponse")
    public void removeToDo(
        @WebParam(name = "arg0", targetNamespace = "")
        ToDo arg0);

    /**
     * 
     * @return
     *     returns ivelate.p1.soapserver.ToDoList
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listToDos", targetNamespace = "http://soapserver.p1.ivelate/", className = "ivelate.p1.soapserver.ListToDos")
    @ResponseWrapper(localName = "listToDosResponse", targetNamespace = "http://soapserver.p1.ivelate/", className = "ivelate.p1.soapserver.ListToDosResponse")
    public ToDoList listToDos();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addToDo", targetNamespace = "http://soapserver.p1.ivelate/", className = "ivelate.p1.soapserver.AddToDo")
    @ResponseWrapper(localName = "addToDoResponse", targetNamespace = "http://soapserver.p1.ivelate/", className = "ivelate.p1.soapserver.AddToDoResponse")
    public void addToDo(
        @WebParam(name = "arg0", targetNamespace = "")
        ToDo arg0);

}
